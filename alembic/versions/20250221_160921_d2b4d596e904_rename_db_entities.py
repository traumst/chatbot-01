"""rename db entities

Revision ID: d2b4d596e904
Revises: 27de1d703fc2
Create Date: 2025-02-21 16:09:21.288887

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2b4d596e904'
down_revision: Union[str, None] = '27de1d703fc2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('generation_record',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('hash', sa.Integer(), nullable=True),
        sa.Column('query_text', sa.Text(), nullable=False),
        sa.Column('response_text', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generation_record_created_at'), 'generation_record', ['created_at'], unique=False)
    op.create_index(op.f('ix_generation_record_hash'), 'generation_record', ['hash'], unique=False)
    op.create_index(op.f('ix_generation_record_id'), 'generation_record', ['id'], unique=False)
    op.create_index(op.f('ix_generation_record_updated_at'), 'generation_record', ['updated_at'], unique=False)
    # copy data to the new table
    op.execute(
        """
        INSERT INTO generation_record (id, hash, query_text, response_text, created_at, updated_at)
        SELECT id, hash, query_text, response_text, created_at, updated_at FROM query_logs
        """
    )
    op.drop_index('ix_query_logs_created_at', table_name='query_logs')
    op.drop_index('ix_query_logs_hash', table_name='query_logs')
    op.drop_index('ix_query_logs_updated_at', table_name='query_logs')
    op.drop_table('query_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('query_logs',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('query_text', sa.TEXT(), nullable=False),
        sa.Column('response_text', sa.TEXT(), nullable=True),
        sa.Column('created_at', sa.DATETIME(), nullable=False),
        sa.Column('hash', sa.INTEGER(), nullable=True),
        sa.Column('updated_at', sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_query_logs_updated_at', 'query_logs', ['updated_at'], unique=False)
    op.create_index('ix_query_logs_hash', 'query_logs', ['hash'], unique=False)
    op.create_index('ix_query_logs_created_at', 'query_logs', ['created_at'], unique=False)
    # copy data to the old table
    op.execute(
        """
        INSERT INTO query_logs (id, hash, query_text, response_text, created_at, updated_at)
        SELECT id, hash, query_text, response_text, created_at, updated_at FROM generation_record
        """
    )
    op.drop_index(op.f('ix_generation_record_updated_at'), table_name='generation_record')
    op.drop_index(op.f('ix_generation_record_id'), table_name='generation_record')
    op.drop_index(op.f('ix_generation_record_hash'), table_name='generation_record')
    op.drop_index(op.f('ix_generation_record_created_at'), table_name='generation_record')
    op.drop_table('generation_record')
    # ### end Alembic commands ###
